# -*- coding: utf-8 -*-
"""LinearRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ow8oRxBoHLhIDra2alAXUhEUhUUEV3pJ
"""

from google.colab import files
data_to_load = files.upload()

import pandas as pd
import plotly.express as px

df = pd.read_csv("data.csv")
gre_score = df["GRE Score"].tolist()
chances_of_admission = df["Chance of Admit "].tolist()

fig = px.scatter(x = gre_score, y = chances_of_admission)
fig.show()

m = 0.01
c = -2.5

y = []

for x in gre_score:
  y_value = m * x + c
  y.append(y_value)

fig = px.scatter(x = gre_score, y = chances_of_admission)
fig.update_layout(
    shapes = [
              dict(
              type = "line",
              y0 = min(y),
              y1 = max(y),
              x0 = min(gre_score),
              x1 = max(gre_score)
              )
]
)
fig.show()

x = 600
y = m * x + c
print(f"Chances of Admission based on GRE Score of {x} is {y}")

import numpy as np

gre_score_array = np.array(gre_score)
chances_of_admission_array = np.array(chances_of_admission)

n, c = np.polyfit(gre_score_array, chances_of_admission_array, 1)
y = []

for x in gre_score_array:
  y_value = m * x + c
  y.append(y_value)

fig = px.scatter(x = gre_score_array, y = chances_of_admission_array)
fig.update_layout(
     shapes = [
              dict(
              type = "line",
              y0 = min(y),
              y1 = max(y),
              x0 = min(gre_score_array),
              x1 = max(gre_score_array)
              )
]
)
fig.show()

x = 600
y = m * x + c
print(f"Chances of Admission based on GRE Score of {x} is {y}")